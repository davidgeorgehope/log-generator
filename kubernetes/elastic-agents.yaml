apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-log-client
  labels:
    app: mysql-log-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-log-client
  template:
    metadata:
      labels:
        app: mysql-log-client
    spec:
      containers:
      - name: mysql-log-generator
        image: djhope99/log-generator:latest
        command: ["java", "-jar", "/app/log-generator-0.0.1-SNAPSHOT.jar", "--spring.profiles.active=mysql"]
        env:
        - name: LOG_DIRECTORY
          value: "/var/log/mysql"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_RATE
          value: "10"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/mysql
      - name: elastic-agent
        image: docker.elastic.co/elastic-agent/elastic-agent:8.17.2
        env:
        - name: FLEET_ENROLL
          value: "1"
        - name: FLEET_URL
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: FLEET_URL
        - name: FLEET_INSECURE
          value: "true"
        - name: FLEET_ENROLLMENT_TOKEN
          valueFrom:
            configMapKeyRef:
              name: enrollment-tokens
              key: mysql-enrollment-token
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/mysql
          readOnly: true
      volumes:
      - name: log-volume
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-backend-log-client
  labels:
    app: nginx-backend-log-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-backend-log-client
  template:
    metadata:
      labels:
        app: nginx-backend-log-client
    spec:
      containers:
      - name: nginx-backend-log-generator
        image: djhope99/log-generator:latest
        command: ["java", "-jar", "/app/log-generator-0.0.1-SNAPSHOT.jar", "--spring.profiles.active=nginx-backend"]
        env:
        - name: LOG_DIRECTORY
          value: "/var/log/nginx_backend"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_RATE
          value: "10"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nginx_backend
      - name: elastic-agent
        image: docker.elastic.co/elastic-agent/elastic-agent:8.17.2
        env:
        - name: FLEET_ENROLL
          value: "1"
        - name: FLEET_URL
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: FLEET_URL
        - name: FLEET_INSECURE
          value: "true"
        - name: FLEET_ENROLLMENT_TOKEN
          valueFrom:
            configMapKeyRef:
              name: enrollment-tokens
              key: nginx-backend-enrollment-token
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nginx_backend
          readOnly: true
      volumes:
      - name: log-volume
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-frontend-log-client
  labels:
    app: nginx-frontend-log-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-frontend-log-client
  template:
    metadata:
      labels:
        app: nginx-frontend-log-client
    spec:
      containers:
      - name: nginx-frontend-log-generator
        image: djhope99/log-generator:latest
        command: ["java", "-jar", "/app/log-generator-0.0.1-SNAPSHOT.jar", "--spring.profiles.active=nginx-frontend"]
        env:
        - name: LOG_DIRECTORY
          value: "/var/log/nginx_frontend"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_RATE
          value: "10"
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nginx_frontend
      - name: elastic-agent
        image: docker.elastic.co/elastic-agent/elastic-agent:8.17.2
        env:
        - name: FLEET_ENROLL
          value: "1"
        - name: FLEET_URL
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: FLEET_URL
        - name: FLEET_INSECURE
          value: "true"
        - name: FLEET_ENROLLMENT_TOKEN
          valueFrom:
            configMapKeyRef:
              name: enrollment-tokens
              key: nginx-frontend-enrollment-token
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nginx_frontend
          readOnly: true
      volumes:
      - name: log-volume
        emptyDir: {} 